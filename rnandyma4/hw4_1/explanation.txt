1.For code in hw4_a the variable tid is declared private in the pragma so even though it is declared outside the omp parallel for pragma hence it is declared in the global stack, as it is declared private in the "pragma omp paralle for" it is also created in each of the parallel threads private stack. SO even though the tid variable is getting updated in the loop, when we are printing its value after the parallel for ends we are still getting the initially initialized value of tid which is -1 as it is in the global stack and is not modified by the function in the parallel region. Even though the thread 0 local stack is allocated in the main stack it is still different.

2. For code hw4_b the variable tid is declared in the parallel region only so is private for each thread. Hence all of the instances of the tid printed have different address and different values as expected.

3. For code hw4_c the variable tid is shared among all thread by default as nothing is mentioned along with the omp parallel for pragma. Hence in the output we can see the address of the variable is same for all the threads. So the print statement after the parallel region is executed prints the latest value of tid.